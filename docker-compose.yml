services:
    nginx:
        build:
            context: ${DOCKER_PATH}
            dockerfile: ${DOCKER_PATH}/nginx/Dockerfile
            args:
                USERGROUP: ${USERGROUP}
        volumes:
            - ${SITE_PATH}:/var/www
            - ${DOCKER_PATH}/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - 80:80
            - 443:443
        depends_on:
            - app
        networks:
            - compose
        container_name: nginx
    app:
        build:
            context: ${DOCKER_PATH}
            dockerfile: ${DOCKER_PATH}/app/php-8.2/Dockerfile
            args:
                USERGROUP: ${USERGROUP}
        volumes:
            - ${SITE_PATH}:/var/www
            - ${DOCKER_PATH}/app/php-8.2/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ${DOCKER_PATH}/app/php-8.2/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ${DOCKER_PATH}/app/php-fpm.conf:/usr/local/etc/php-fpm.d/zzzzwww.conf
            - ${DOCKER_PATH}/app/nginx:/etc/nginx/conf.d
        ports:
            - 9000:9000
        depends_on:
            - mysql
        networks:
            - compose
        extra_hosts:
            - host.docker.internal:host-gateway
        container_name: app
    mysql:
        image: mysql:8.0
        restart: always
        volumes:
            - mysql_data:/var/www
            - ${DOCKER_PATH}/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
        ports:
            - 8102:3306
        environment:
            MYSQL_DATABASE: site
            MYSQL_ROOT_PASSWORD: root
        networks:
            - compose
        container_name: mysql
    node:
        build:
            context: ${DOCKER_PATH}
            dockerfile: ${DOCKER_PATH}/node/Dockerfile
            args:
                NODE_PATH: /var/www/local/js/vite
                NODE_VERSION: "23"
                USERGROUP: ${USERGROUP}
        volumes:
            - ${SITE_PATH}:/var/www
        ports:
            - 5173:5173
            - 5174:5174
        depends_on:
            - app
        networks:
            - compose
        command: tail -f /dev/null
        container_name: node
    sphinx:
        build:
            context: ${DOCKER_PATH}
            dockerfile: ${DOCKER_PATH}/sphinx/Dockerfile
        restart: always
        volumes:
            - ${DOCKER_PATH}/sphinx/sphinx.conf:/usr/local/etc/sphinx.conf
            - sphinx_data:/var/lib/sphinx/data
        ports:
            - 9312:9312
            - 9306:9306
        networks:
            - compose
        container_name: sphinx
volumes:
    mysql_data: {}
    sphinx_data: {}
networks:
    compose:
        driver: bridge
